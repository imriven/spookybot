"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseEmotePositions = exports.parseEmoteOffsets = void 0;
const shared_utils_1 = require("@d-fischer/shared-utils");
const common_1 = require("@twurple/common");
/** @private */
function parseEmoteOffsets(emotes) {
    if (!emotes) {
        return new Map();
    }
    return new Map(emotes
        .split('/')
        .map(emote => {
        const [emoteId, placements] = emote.split(':', 2);
        if (!placements) {
            return null;
        }
        return [emoteId, placements.split(',')];
    })
        .filter((e) => e !== null));
}
exports.parseEmoteOffsets = parseEmoteOffsets;
/** @private */
function parseEmotePositions(message, emoteOffsets) {
    return [...emoteOffsets.entries()]
        .flatMap(([emote, placements]) => placements.map((placement) => {
        const [startStr, endStr] = placement.split('-');
        const start = +startStr;
        const end = +endStr;
        const name = (0, shared_utils_1.utf8Substring)(message, start, end + 1);
        return {
            type: 'emote',
            position: start,
            length: end - start + 1,
            id: emote,
            name,
            displayInfo: new common_1.ChatEmote({
                code: name,
                id: emote
            })
        };
    }))
        .sort((a, b) => a.position - b.position);
}
exports.parseEmotePositions = parseEmotePositions;
