"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserNotice = void 0;
const tslib_1 = require("tslib");
const common_1 = require("@twurple/common");
const ircv3_1 = require("ircv3");
const ChatUser_1 = require("../../../ChatUser");
const emoteUtil_1 = require("../../../utils/emoteUtil");
const messageUtil_1 = require("../../../utils/messageUtil");
let UserNotice = class UserNotice extends ircv3_1.Message {
    get id() {
        return this._tags.get('id');
    }
    get date() {
        const timestamp = this._tags.get('tmi-sent-ts');
        return new Date(Number(timestamp));
    }
    get userInfo() {
        return new ChatUser_1.ChatUser(this._tags.get('login'), this._tags);
    }
    get channelId() {
        var _a;
        return (_a = this._tags.get('room-id')) !== null && _a !== void 0 ? _a : null;
    }
    get emoteOffsets() {
        return (0, emoteUtil_1.parseEmoteOffsets)(this._tags.get('emotes'));
    }
    parseEmotes() {
        const messageText = (0, messageUtil_1.getMessageText)(this.params.message);
        return (0, common_1.parseChatMessage)(messageText, this.emoteOffsets);
    }
};
tslib_1.__decorate([
    (0, ircv3_1.MessageParamDefinition)({
        type: 'channel'
    })
], UserNotice.prototype, "channel", void 0);
tslib_1.__decorate([
    (0, ircv3_1.MessageParamDefinition)({
        trailing: true,
        optional: true
    })
], UserNotice.prototype, "message", void 0);
UserNotice = tslib_1.__decorate([
    (0, ircv3_1.MessageType)('USERNOTICE')
], UserNotice);
exports.UserNotice = UserNotice;
