import { utf8Substring } from '@d-fischer/shared-utils';
import { ChatEmote } from '@twurple/common';
/** @private */
export function parseEmoteOffsets(emotes) {
    if (!emotes) {
        return new Map();
    }
    return new Map(emotes
        .split('/')
        .map(emote => {
        const [emoteId, placements] = emote.split(':', 2);
        if (!placements) {
            return null;
        }
        return [emoteId, placements.split(',')];
    })
        .filter((e) => e !== null));
}
/** @private */
export function parseEmotePositions(message, emoteOffsets) {
    return [...emoteOffsets.entries()]
        .flatMap(([emote, placements]) => placements.map((placement) => {
        const [startStr, endStr] = placement.split('-');
        const start = +startStr;
        const end = +endStr;
        const name = utf8Substring(message, start, end + 1);
        return {
            type: 'emote',
            position: start,
            length: end - start + 1,
            id: emote,
            name,
            displayInfo: new ChatEmote({
                code: name,
                id: emote
            })
        };
    }))
        .sort((a, b) => a.position - b.position);
}
