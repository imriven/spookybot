import { __decorate } from "tslib";
import { parseChatMessage } from '@twurple/common';
import { Message, MessageParamDefinition, MessageType } from 'ircv3';
import { ChatUser } from "../../../ChatUser.mjs";
import { parseEmoteOffsets } from "../../../utils/emoteUtil.mjs";
import { getMessageText } from "../../../utils/messageUtil.mjs";
let UserNotice = class UserNotice extends Message {
    get id() {
        return this._tags.get('id');
    }
    get date() {
        const timestamp = this._tags.get('tmi-sent-ts');
        return new Date(Number(timestamp));
    }
    get userInfo() {
        return new ChatUser(this._tags.get('login'), this._tags);
    }
    get channelId() {
        var _a;
        return (_a = this._tags.get('room-id')) !== null && _a !== void 0 ? _a : null;
    }
    get emoteOffsets() {
        return parseEmoteOffsets(this._tags.get('emotes'));
    }
    parseEmotes() {
        const messageText = getMessageText(this.params.message);
        return parseChatMessage(messageText, this.emoteOffsets);
    }
};
__decorate([
    MessageParamDefinition({
        type: 'channel'
    })
], UserNotice.prototype, "channel", void 0);
__decorate([
    MessageParamDefinition({
        trailing: true,
        optional: true
    })
], UserNotice.prototype, "message", void 0);
UserNotice = __decorate([
    MessageType('USERNOTICE')
], UserNotice);
export { UserNotice };
