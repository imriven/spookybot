import { rawDataSymbol } from '@twurple/common';
import type { ApiClient } from '../../../ApiClient';
import { type HelixChannelEmoteData, type HelixChannelEmoteSubscriptionTier } from '../../../interfaces/helix/chat.external';
import { HelixEmote } from './HelixEmote';
import type { HelixEmoteFromSet } from './HelixEmoteFromSet';
/**
 * A Twitch Channel emote.
 *
 * @inheritDoc
 */
export declare class HelixChannelEmote extends HelixEmote {
    /** @private */ readonly [rawDataSymbol]: HelixChannelEmoteData;
    private readonly _client;
    constructor(data: HelixChannelEmoteData, client: ApiClient);
    /**
     * The subscription tier necessary to unlock the emote, or null if the emote is not a subscription emote.
     */
    get tier(): HelixChannelEmoteSubscriptionTier | null;
    /**
     * The type of the emote.
     *
     * There are many types of emotes that Twitch seems to arbitrarily assign. Do not rely on this value.
     */
    get type(): string;
    /**
     * The ID of the emote set the emote is part of.
     */
    get emoteSetId(): string;
    /**
     * Retrieves all emotes from the emote's set.
     */
    getAllEmotesFromSet(): Promise<HelixEmoteFromSet[]>;
}
//# sourceMappingURL=HelixChannelEmote.d.ts.map