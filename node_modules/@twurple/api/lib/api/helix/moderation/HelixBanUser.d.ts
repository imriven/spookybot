import { DataObject } from '@twurple/common';
import { type ApiClient } from '../../../ApiClient';
import { type HelixCommonBanUserData } from '../../../interfaces/helix/moderation.external';
import { type HelixUser } from '../user/HelixUser';
/**
 * Information about a user who has been banned/timed out.
 *
 * @hideProtected
 */
export declare class HelixBanUser extends DataObject<HelixCommonBanUserData> {
    private readonly _client;
    private readonly _broadcasterId;
    private readonly _expiryTimestamp;
    /** @private */
    constructor(data: HelixCommonBanUserData, broadcasterId: string, expiryTimestamp: string | null, client: ApiClient);
    /**
     * The ID of the broadcaster whose chat room the user was banned/timed out from chatting in.
     *
     * @deprecated As this is the result of a ban action or list request that takes the broadcaster ID as a parameter,
     * use that directly instead.
     */
    get broadcasterId(): string;
    /**
     * The date and time that the ban/timeout was created.
     */
    get creationDate(): Date;
    /**
     * The date and time that the timeout will end. Is `null` if the user was banned instead of put in a timeout.
     */
    get expiryDate(): Date | null;
    /**
     * @deprecated Use {@link HelixBanUser#expiryDate} instead.
     */
    get endDate(): Date | null;
    /**
     * The ID of the moderator that banned or put the user in the timeout.
     */
    get moderatorId(): string;
    /**
     * Retrieves more information about the moderator that banned or put the user in the timeout.
     */
    getModerator(): Promise<HelixUser>;
    /**
     * The ID of the user that was banned or put in a timeout.
     */
    get userId(): string;
    /**
     * Fetches more info about the user that was banned or put in a timeout.
     */
    getUser(): Promise<HelixUser>;
}
//# sourceMappingURL=HelixBanUser.d.ts.map