import { type UserIdResolvable } from '@twurple/common';
import { type HelixUpdateChatSettingsParams } from './chat.input';
/**
 * The subscription tier necessary to unlock an emote. 1000 means tier 1, and so on.
 */
export declare type HelixChannelEmoteSubscriptionTier = '1000' | '2000' | '3000';
/** @private */
export interface HelixEmoteImageData {
    url_1x: string;
    url_2x: string;
    url_4x: string;
}
/** @private */
export declare type HelixEmoteImageScale = 1 | 2 | 4;
/** @private */
export declare type HelixEmoteFormat = 'static' | 'animated';
/** @private */
export declare type HelixEmoteScale = '1.0' | '2.0' | '3.0';
/** @private */
export declare type HelixEmoteThemeMode = 'light' | 'dark';
/** @private */
export interface HelixEmoteData {
    id: string;
    name: string;
    images: HelixEmoteImageData;
    format: HelixEmoteFormat[];
    scale: HelixEmoteScale[];
    theme_mode: HelixEmoteThemeMode[];
}
/** @private */
export interface HelixChannelEmoteData extends HelixEmoteData {
    tier: HelixChannelEmoteSubscriptionTier | '';
    emote_type: string;
    emote_set_id: string;
}
/** @private */
export interface HelixEmoteFromSetData extends HelixEmoteData {
    emote_type: string;
    emote_set_id: string;
    owner_id: string;
}
/** @private */
export interface HelixChatBadgeVersionData {
    id: string;
    image_url_1x: string;
    image_url_2x: string;
    image_url_4x: string;
}
/** @private */
export interface HelixChatBadgeSetData {
    set_id: string;
    versions: HelixChatBadgeVersionData[];
}
/**
 * The color used to highlight an announcement.
 */
export declare type HelixChatAnnouncementColor = 'blue' | 'green' | 'orange' | 'purple' | 'primary';
/**
 * Colors that can be used by users in chat.
 *
 * Note that hex codes can only be used by users that have a Prime or Turbo subscription.
 */
export declare type HelixChatUserColor = 'blue' | 'blue_violet' | 'cadet_blue' | 'chocolate' | 'coral' | 'dodger_blue' | 'firebrick' | 'golden_rod' | 'green' | 'hot_pink' | 'orange_red' | 'red' | 'sea_green' | 'spring_green' | 'yellow_green' | `#${string}`;
/** @private */
export interface HelixChatChatterData {
    user_id: string;
    user_login: string;
    user_name: string;
}
/** @private */
export interface HelixChatColorDefinitionData {
    user_id: string;
    user_name: string;
    user_login: string;
    color: string;
}
/** @private */
export interface HelixChatSettingsData {
    broadcaster_id: string;
    slow_mode: boolean;
    slow_mode_wait_time: number | null;
    follower_mode: boolean;
    follower_mode_duration: number | null;
    subscriber_mode: boolean;
    emote_mode: boolean;
    unique_chat_mode: boolean;
}
/** @private */
export interface HelixPrivilegedChatSettingsData extends HelixChatSettingsData {
    moderator_id: string;
    non_moderator_chat_delay: boolean;
    non_moderator_chat_delay_duration: number | null;
}
/** @private */
export declare function createChatSettingsUpdateBody(settings: HelixUpdateChatSettingsParams): {
    slow_mode: boolean | undefined;
    slow_mode_wait_time: number | undefined;
    follower_mode: boolean | undefined;
    follower_mode_duration: number | undefined;
    subscriber_mode: boolean | undefined;
    emote_mode: boolean | undefined;
    unique_chat_mode: boolean | undefined;
    non_moderator_chat_delay: boolean | undefined;
    non_moderator_chat_delay_duration: number | undefined;
};
/** @private */
export declare function createChatColorUpdateQuery(user: UserIdResolvable, color: HelixChatUserColor): {
    user_id: string;
    color: HelixChatUserColor;
};
//# sourceMappingURL=chat.external.d.ts.map