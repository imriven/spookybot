import { type HelixResponse } from '@twurple/api-call';
import { type CheermoteBackground, type CheermoteScale, type CheermoteState } from '@twurple/common';
import { type HelixBitsLeaderboardQuery } from './bits.input';
import { type HelixDateRangeData } from './generic.external';
/** @private */
export interface HelixBitsLeaderboardEntryData {
    user_id: string;
    user_login: string;
    user_name: string;
    rank: number;
    score: number;
}
/** @private */
export interface HelixBitsLeaderboardResponse extends HelixResponse<HelixBitsLeaderboardEntryData> {
    date_range: HelixDateRangeData;
    total: number;
}
/** @private */
export declare type HelixCheermoteActionImageUrlsByScale = Record<CheermoteScale, string>;
/** @private */
export declare type HelixCheermoteActionImageUrlsByStateAndScale = Record<CheermoteState, HelixCheermoteActionImageUrlsByScale>;
/** @private */
export declare type HelixCheermoteActionImageUrlsByBackgroundAndStateAndScale = Record<CheermoteBackground, HelixCheermoteActionImageUrlsByStateAndScale>;
/** @private */
export interface HelixCheermoteTierData {
    min_bits: number;
    id: string;
    color: string;
    images: HelixCheermoteActionImageUrlsByBackgroundAndStateAndScale;
    can_cheer: boolean;
    show_in_bits_card: boolean;
}
/** @private */
declare type HelixCheermoteType = 'global_first_party' | 'global_third_party' | 'channel_custom' | 'display_only' | 'sponsored';
/** @private */
export interface HelixCheermoteData {
    prefix: string;
    tiers: HelixCheermoteTierData[];
    type: HelixCheermoteType;
    last_updated: string;
    order: number;
}
/** @private */
export declare function createBitsLeaderboardQuery(params?: HelixBitsLeaderboardQuery): {
    count: string;
    period: import("./bits.input").HelixBitsLeaderboardPeriod;
    started_at: string | undefined;
    user_id: string | undefined;
};
export {};
//# sourceMappingURL=bits.external.d.ts.map