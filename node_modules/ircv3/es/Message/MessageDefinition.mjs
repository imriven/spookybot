import { Message } from "./Message.mjs";
// eslint-disable-next-line @typescript-eslint/ban-types
const isMessageType = (ctor) => Object.prototype.isPrototypeOf.call(Message, ctor);
export const MessageType = (commandName) => target => {
    if (!isMessageType(target)) {
        throw new Error('You need to extend the Message class to use the MessageType decorator');
    }
    target.COMMAND = commandName;
};
export const MessageParamDefinition = (spec = {}) => (target, propertyKey) => {
    var _a;
    if (!(target instanceof Message)) {
        throw new Error('You need to extend the Message class to use the MessageParam decorator');
    }
    if (typeof propertyKey !== 'string') {
        return;
    }
    const cls = target.constructor;
    ((_a = cls.PARAM_SPEC) !== null && _a !== void 0 ? _a : (cls.PARAM_SPEC = {}))[propertyKey] = spec;
};
