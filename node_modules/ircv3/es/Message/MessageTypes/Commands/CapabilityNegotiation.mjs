var CapabilityNegotiation_1;
import { __decorate } from "tslib";
import { Message } from "../../Message.mjs";
import { MessageParamDefinition, MessageType } from "../../MessageDefinition.mjs";
let CapabilityNegotiation = CapabilityNegotiation_1 = class CapabilityNegotiation extends Message {
    isResponseTo(originalMessage) {
        if (!(originalMessage instanceof CapabilityNegotiation_1)) {
            return false;
        }
        switch (this.params.subCommand) {
            case 'ACK':
            case 'NAK': {
                // trim is necessary because some networks seem to add trailing spaces (looking at you, Freenode)...
                return (originalMessage.params.subCommand === 'REQ' &&
                    originalMessage.params.capabilities === this.params.capabilities.trim());
            }
            case 'LS':
            case 'LIST': {
                return originalMessage.params.subCommand === this.params.subCommand;
            }
            default: {
                return false;
            }
        }
    }
    endsResponseTo(originalMessage) {
        if (!(originalMessage instanceof CapabilityNegotiation_1)) {
            return false;
        }
        switch (this.params.subCommand) {
            case 'LS':
            case 'LIST': {
                return !this.params.continued;
            }
            default: {
                return true;
            }
        }
    }
};
CapabilityNegotiation.SUPPORTS_CAPTURE = true;
__decorate([
    MessageParamDefinition({
        match: /^(?:[a-z_\-\[\]\\^{}|`][a-z0-9_\-\[\]\\^{}|`]+|\*)$/i,
        optional: true,
        noClient: true
    })
], CapabilityNegotiation.prototype, "target", void 0);
__decorate([
    MessageParamDefinition({
        match: /^(?:LS|LIST|REQ|ACK|NAK|END|NEW|DEL)$/i
    })
], CapabilityNegotiation.prototype, "subCommand", void 0);
__decorate([
    MessageParamDefinition({
        match: /^\d+$/,
        optional: true
    })
], CapabilityNegotiation.prototype, "version", void 0);
__decorate([
    MessageParamDefinition({
        match: /^\*$/,
        optional: true
    })
], CapabilityNegotiation.prototype, "continued", void 0);
__decorate([
    MessageParamDefinition({
        trailing: true,
        optional: true
    })
], CapabilityNegotiation.prototype, "capabilities", void 0);
CapabilityNegotiation = CapabilityNegotiation_1 = __decorate([
    MessageType('CAP')
], CapabilityNegotiation);
export { CapabilityNegotiation };
