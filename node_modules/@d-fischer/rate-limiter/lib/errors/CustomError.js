"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CustomError = void 0;
var tslib_1 = require("tslib");
/** @private */
var CustomError = /** @class */ (function (_super) {
    tslib_1.__extends(CustomError, _super);
    function CustomError() {
        var params = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            params[_i] = arguments[_i];
        }
        var _newTarget = this.constructor;
        var _this = this;
        var _a;
        // @ts-ignore
        _this = _super.apply(this, tslib_1.__spreadArray([], tslib_1.__read(params), false)) || this;
        // restore prototype chain
        Object.setPrototypeOf(_this, _newTarget.prototype);
        // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition
        (_a = Error.captureStackTrace) === null || _a === void 0 ? void 0 : _a.call(Error, _this, _newTarget.constructor);
        return _this;
    }
    Object.defineProperty(CustomError.prototype, "name", {
        get: function () {
            return this.constructor.name;
        },
        enumerable: false,
        configurable: true
    });
    return CustomError;
}(Error));
exports.CustomError = CustomError;
